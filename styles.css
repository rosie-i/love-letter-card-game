body {
    background-color: rgb(151, 0, 30);
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    color: rgb(255, 255, 255);
    margin: 0;
}

html,
body,
.fullscreen {
    height: 100%;
}



/* --------------- GAMEPLAY VIEW LAYOUT --------------- */
#gameplayView {
    /* Set plain rgb background colour in case radial-gradient doesn't work on all browsers */
    background: rgb(75,0,0);
    background: radial-gradient(circle, rgba(75,0,0,1) 0%, rgba(51,0,0,1) 37%, rgba(33,0,3,1) 100%);
    
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(4, 1fr) 2fr;
    grid-column-gap: 0px;
    grid-row-gap: 0px;
    height: 100%;
}


/* -- Gameplay opponent area -- */

.gameplay-opponentInfoContainer {
    grid-area: 1 / 1 / 2 / 5;
    background-color: rgba(81, 11, 11, 0.79);

}

.opponentsFlexContainer {
    height: 100%;
    display: flex;
    /* We also set flex-wrap: wrap on the Flex container so that the child elements will wrap to the next line if they exceed the width of the container. */
    flex-wrap: nowrap;
    justify-content: space-evenly;

}

.opponentBoxFlexItem {
    flex: 1 1 auto;

    /* background-color: aliceblue; */
    /* border: 1px solid rgb(18, 7, 7); */
    color: rgb(235, 235, 235);
    margin: 2px;
    padding: 2px;
}

.opponentInfoBox {
    background-color: rgba(40, 40, 40, 0.528); 
    /* border: 2px solid rgb(100, 0, 0);  */
    padding: 8px;

}


.opponentInfoBox.playerActiveHighlight {
    box-shadow: 0 0 7px 2px #f3ffe0;
    border-radius: 2px;
    animation: pulse 2s infinite;
}


/* Style the opponent name and information */
.opponentNameDiv {
    font-size: 15px;
    font-weight: bold;
    margin-bottom: 6px;
}

.opponentTokens, .opponentKnockedOutStatus, .opponentHand, .opponentHandmaidStatus {
    font-size: 13px;
    margin-bottom: 4px;
}


/* -- Gameplay card piles area -- */

.gameplay-cardPilesAreaContainer {
    grid-area: 2 / 1 / 5 / 5;
    /* Set plain rgb background colour in case radial-gradient doesn't work on all browsers
    background: rgb(75,0,0);
    background: radial-gradient(circle, rgba(75,0,0,1) 0%, rgba(51,0,0,1) 37%, rgba(33,0,3,1) 100%); */
}

.cardPileGridContainer {
    height: 100%;
    display: grid;
    grid-template-columns: repeat(2, 1fr) 0.2fr 2fr 0.5fr 2fr 0.2fr 1fr 0.2fr 1fr 0.2fr;
    grid-template-rows: 1fr 0.7fr 1fr 0.7fr 1fr;
    grid-column-gap: 0px;
    grid-row-gap: 0px;

}

.cardPileDeckCount {
    grid-area: 3 / 2 / 4 / 3;
    background-color: black;
}

.cardPileDeck {
    grid-area: 2 / 4 / 5 / 5;
    background-color: rgb(93, 0, 0);

    /* Set the default size of the card */
    width: 100px;
    height: 150px;

    /* Add some styles to make it look like a card */
    border: 1px solid #310000;
    border-radius: 5px;
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);


    background-image: url("src/imgs/card-back.webp");
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    
}

.cardPilePlayed {
    grid-area: 2 / 6 / 5 / 7;
    background-color: rgb(0, 255, 4);
    /* ADDING THE WIDTH AND HEIGHT and pos rel FOR ANIMATION TESTING */
    width: 100px;
    height: 150px;

    border: 1px solid #310000;
    border-radius: 5px;
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);

    /* position: relative; */
    background-image: url("src/imgs/empty-pile.webp");
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}

.cardPilePlayedCount {
    grid-area: 3 / 8 / 4 / 9;
    background-color: black;
}

.cardPileDiscard {
    grid-area: 3 / 10 / 5 / 11;
    
    width: 75px;
    height: 105px;

    border: 1px solid #310000;
    border-radius: 5px;
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);

    background-image: url("src/imgs/empty-pile.webp");
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;

}


/* -- Gameplay player hand/info area -- */

.gameplay-playerHandAndInfoContainer {
    grid-area: 5 / 1 / 6 / 5;
    background-color: rgb(47, 47, 47);
}

.playerHandInfoGridContainer {
    height: 100%;
    display: grid;
    grid-template-columns: 2fr 0.4fr 1.5fr 0.2fr 1.5fr 0.4fr;
    grid-template-rows: 0.75fr 0.25fr 3fr;
    grid-column-gap: 0px;
    grid-row-gap: 0px;
}

.playerHandInfoGameRoundStats {
    grid-area: 1 / 1 / 4 / 2;
    background-color: rgba(81, 11, 11, 0.79);
    padding: 8px;
}

.playerHandInfoGameRoundStats .playerHandInner {
    background-color: rgba(40, 40, 40, 0.528);
    height: calc(100% - 16px);
    padding: 8px;
}

.playerHandInfoGameRoundStats .playerHandInner.playerActiveHighlight {
    box-shadow: 0 0 7px 2px #f3ffe0;
    border-radius: 2px;
    animation: pulse 2s infinite;

}

@keyframes pulse {
    0% {
        box-shadow: 0 0 7px 2px #f3ffe0;
    }
    50% {
        box-shadow: 0 0 6px 5px #f3ffe0;
    }
    100% {
        box-shadow: 0 0 7px 2px #f3ffe0;
    }
}

.playerHandInfo-PlayerName {
    font-size: 15px;
    font-weight: bold;
    margin-bottom: 6px;
}

.playerHandInfo-Tokens, .playerHandInfo-RoundStatus, .playerHandInfo-Handmaid {
    font-size: 13px;
    margin-bottom: 4px;
}




.playerHandInfoHeader {
    grid-area: 1 / 2 / 2 / 7;
    background-color: rgb(26, 26, 26);
    font-size: 15px;
    font-weight: bold;
    padding: 8px;

}

#playerHandInfo-CardLeftContainer {
    grid-area: 3 / 3 / 4 / 4;

}

#playerHandInfo-CardRightContainer {
    grid-area: 3 / 5 / 4 / 6;
}

.playerHandEmptyCardSlot {
    max-width: 100px;
    max-height: 150px;

}

.playerHandEmptyCardSlot .cardClassImg {
    transition: transform 0.15s ease-in-out;
}

.playerHandEmptyCardSlot .cardClassImg:hover {
    transform: scale(1.05);
}

.playerHandEmptyCardSlot .cardClassImg:active {
    transform: scale(0.95);
    /* decrease the size of the card when clicked */
    
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
    /* add a subtle shadow to indicate click */
}




/* On card click - Target player modal */

.targetWhichPlayerModal {
    /* height: 20%;
    width: 36%;
    left: 20%;
    bottom: 22%;
    background-color: rgba(15, 15, 15, 0.834);
    position: absolute; */

    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    padding: 20px;
    background-color: #292929ec;
    border: 1px solid #ccc;
    border-radius: 5px;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);
    text-align: center;
}

.targetWhichPlayerModal.hidden {
    display: none;
}

.targetWhichPlayerModal .targetModalText {
    margin: 0 0 5px;
}
.targetWhichPlayerModal .targetModalSecondaryText {
    margin: 0 0 20px;
}


.targetWhichPlayerModal button {
    margin: 5px;
    padding: 10px 20px;
    background-color: rgb(89, 0, 0);
    color: #fff;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.2s;
}

.targetWhichPlayerModal button:hover {
    background-color: rgb(46, 0, 0);
}

.targetWhichPlayerModal button.protectedByHandmaid {
    cursor: default;
    background-color: rgb(63, 63, 63);
    opacity: 0.5;

}

.cardClassImg {
    max-width: 100px;
    max-height: 150px;


    border: 1px solid #310000;
    border-radius: 5px;
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);

}



/* NOTE: EVERYTHING FROM HERE DOWN TO GAME LOG SECTION IS JUST PRACTICE CSS ANIMATIONS */
/* God damn, that looks greater than any CSS I've ever written, madness */

/* I think can probably delete this now - have moved the hover and active responses I wanted */
.CARD-ANIMATION-TESTINGGG {
    /* Set the default size of the card */
    width: 100px;
    height: 150px;
    /* Add some styles to make it look like a card */
    border: 1px solid #887b4a;
    border-radius: 5px;
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);
    /* Add a transition to smoothly animate the size change */

    background-image: url("src/imgs/8.webp");
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}









/* This is cool in combo with an onclick add class! Though not sure it's actually what I want */
/* 
.moveUpToPlayedPile {
    animation-name: moveUpToPlayedPile;
    animation-duration: 1s;
}

@keyframes moveUpToPlayedPile {
    from {
      transform: translate(0, 0);
    }
    to {
      transform: translate(80px, -270px);
    }
  } */


/* -- Gameplay game log area -- */

.gameplay-gameLogContainer {
    grid-area: 1 / 5 / 4 / 6;
    background-color: rgb(117, 117, 117);
    overflow-y: scroll;

}

.gameplay-gameLogContainer > div:nth-child(odd) {
    background-color: #525252;
}
  
.gameplay-gameLogContainer > div:nth-child(even) {
    background-color: #2b2b2b;
}


/* Probs better to do this dynamically or something? */
span.logMsgHighlightPlayerID-0 {
    color: rgb(255, 230, 0);
    font-weight: 600;
}

span.logMsgHighlightPlayerID-1 {
    color: rgb(255, 0, 170);
    font-weight: 600;
}

span.logMsgHighlightPlayerID-2 {
    color: rgb(0, 232, 170);
    font-weight: 600;
}


/* -- Gameplay chat log area -- */

.gameplay-chatContainer {
    grid-area: 4 / 5 / 6 / 6;
    background-color: rgb(39, 39, 39);

}

.chatlog {
    height: calc(100% - 26px);

    overflow-y: scroll;
}

.chatMessageItem {
    padding: 3px;
}

.chatMessageItem:nth-child(odd) {
    background-color: #d0d0d0;
}

.chatMessageItem:nth-child(even) {
    background-color: #9f9f9f;
}

#chatMessageForm {
    display: flex;
}

#chatMessageInput {
    flex-grow: 1;
    border: none;
}

#chatMessageSendBtn {
    padding: 5px 10px;
    border: none;
    background-color: #007bff;
    color: #fff;
    cursor: pointer;
}





.playerBox {
    background-color: aliceblue;
    color: black;
    /* width: 500px; */
    border: 5px solid black;
}

.drawPile {
    background-color: rgb(40, 255, 183);
}

.discardPile {
    background-color: rgb(180, 255, 40);

}
/* 
.discardPileList {
    
}
 */
.playedPile {
    background-color: rgb(255, 191, 40);

}

.playerActionDiv {
    background-color: rgb(177, 123, 219);

}



/* This is probably not specific enough a selector to be reliably useful! */
.hidden {
    display: none;
}


/* These need to be more specific/given important indicator! */

#gameLobby.hidden {
    display: none;
}

#connectingScreen.hidden {
    display: none;
}

#gameplayView.hidden {
    display: none;
}